// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Componente DietaItem deve renderizar corretamente 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#ddd",
      "borderRadius": 8,
      "borderWidth": 1,
      "elevation": 2,
      "flex": 1,
      "margin": 8,
      "overflow": "hidden",
      "shadowColor": "#000",
      "shadowOffset": {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.1,
      "shadowRadius": 4,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="open-modal-button"
  >
    <View
      style={
        {
          "padding": 8,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 16,
            "fontWeight": "bold",
            "marginBottom": 4,
          }
        }
      >
        Dia: 
        Segunda-feira
      </Text>
      <Text
        style={
          {
            "color": "#555",
            "fontSize": 14,
            "marginBottom": 2,
          }
        }
      >
        Calorias:
         
        2000.00
         
        kcal
      </Text>
      <Text
        style={
          {
            "color": "#555",
            "fontSize": 14,
            "marginBottom": 2,
          }
        }
      >
        Data de criação:
         
        30/10/2024
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "flexDirection": "column",
        "gap": 3,
        "justifyContent": "space-between",
        "marginBottom": 10,
        "paddingHorizontal": 10,
        "paddingVertical": 1,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#2d74da",
          "borderRadius": 5,
          "flex": 0.5,
          "marginTop": 5,
          "opacity": 1,
          "paddingVertical": 8,
        }
      }
      testID="edit-button"
    >
      <Text
        style={
          {
            "color": "#fff",
            "fontSize": 16,
          }
        }
      >
        Editar
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#e13f2f",
          "borderRadius": 5,
          "flex": 0.5,
          "marginTop": 5,
          "opacity": 1,
          "paddingVertical": 8,
        }
      }
      testID="delete-button"
    >
      <Text
        style={
          {
            "color": "#fff",
            "fontSize": 16,
          }
        }
      >
        Remover
      </Text>
    </View>
  </View>
</View>
`;
